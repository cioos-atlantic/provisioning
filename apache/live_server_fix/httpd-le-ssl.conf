<IfModule mod_ssl.c>
<VirtualHost *:443>
        ServerName dev.cioosatlantic.ca
        ServerAlias dev.cioosatlantic.ca
        DocumentRoot /var/www/html/cioos-siooc-wordpress/wp-app

	<Location "/">
		Options None
		Require all granted
		
		## Request header rules
	       	## as per http://httpd.apache.org/docs/2.2/mod/mod_headers.html#requestheader
	        RequestHeader set X-Forwarded-Proto "https"		
		## Proxy Rules
       		#ProxyRequests Off
	        ProxyPreserveHost On
	       	ProxyPass http://127.0.0.1:8500/
	        ProxyPassReverse http://127.0.0.1:8500/
	</Location>
	<Location "/wp-admin">
		Options None
		Require all granted
	</Location>
	
	# CKAN
	#<Location "/ckan">
	#	ProxyPreserveHost Off
	#      	ProxyPass http://127.0.0.1:5000
	#        ProxyPassReverse http://127.0.0.1:5000
	#	Header set Access-Control-Allow-Origin "*"
	#	AuthType Basic
	#        AuthName "Restricted Content"
	#        AuthUserFile /etc/httpd/.htpasswd
	#	Require valid-user
	#</Location>
	
	# pycsw
	#<Location "catalogue.dev.cioosatlantic.ca/csw/">
	#        ProxyPass http://127.0.0.1:8000/pycsw/csw.js
	#	ProxyPassReverse http://127.0.0.1:8000/pycsw/csw.js
	#</Location>
	
	<Location "/erddap">
		Header always set Strict-Transport-Security "max-age=31536000; includeSubdomains;"

		# Adding CORS header to Apache to avoid reconfiguring Tomcat 
		# to provide the same functionality
		Header set Access-Control-Allow-Origin "*"

		ProxyPreserveHost Off
	        ProxyPass http://127.0.0.1:8080/erddap
		ProxyPassReverse http://127.0.0.1:8080/erddap
		AuthType Basic
		AuthName "Restricted Content"
		AuthUserFile /etc/httpd/.htpasswd
		Require valid-user
	</Location>	

	# Asset Map
	<Location "/assetmap/asset">
		ProxyPreserveHost Off
	      	ProxyPass http://127.0.0.1:8009/asset
	        ProxyPassReverse http://127.0.0.1:8009/asset
	</Location>

	# Debug Asset Map
	<Location "/debugmap/asset">
		ProxyPreserveHost Off
	      	#ProxyPass http://dev.cioosatlantic.ca:8008/asset
	        #ProxyPassReverse http://dev.cioosatlantic.ca:8008/asset
                ProxyPass http://127.0.0.1:8008/asset
                ProxyPassReverse http://127.0.0.1:8008/asset
		AuthType Basic
	        AuthName "Restricted Content"
	        AuthUserFile /etc/httpd/.htpasswd
		Require valid-user
	</Location>

	<Location "/graylog">
		RequestHeader set X-Graylog-Server-URL "https://dev.cioosatlantic.ca/graylog"
		ProxyPass http://127.0.0.1:9000
		ProxyPassReverse http://127.0.0.1:9000
	</Location>

	# goaccess log viewer
	#<Location "/goaccess">
	#	ProxyPreserveHost Off
	#      	ProxyPass http://127.0.0.1:9999/goaccess
	#        ProxyPassReverse http://127.0.0.1:9999/goaccess
	#	AuthType Basic
	#        AuthName "Restricted Content"
	#        AuthUserFile /etc/httpd/.htpasswd
	#	Require valid-user
	#</Location>


	# meta WAF
#	<Location "/metadata">
#		ProxyPass http://dev.cioosatlantic.ca/metadata
#		ProxyPassReverse http://dev.cioosatlantic.ca/metadata
#		Options +Indexes +FollowSymLinks
#		AllowOverride None
#		Require all granted
#	</Location>

	Alias "/metadata" "/srv/metadata"
	<Directory "/srv/metadata">
		Options +Indexes +FollowSymLinks
		# AllowOverride None
		Require all granted
	</Directory>

Include /etc/letsencrypt/options-ssl-apache.conf
SSLCertificateFile /etc/letsencrypt/live/dev.cioosatlantic.ca-0001/cert.pem
SSLCertificateKeyFile /etc/letsencrypt/live/dev.cioosatlantic.ca-0001/privkey.pem
SSLCertificateChainFile /etc/letsencrypt/live/dev.cioosatlantic.ca-0001/chain.pem
</VirtualHost>

<VirtualHost *:443>
        ServerName catalogue.dev.cioosatlantic.ca
        ServerAlias catalogue.dev.cioosatlantic.ca
        DocumentRoot /var/www/html3

        #RewriteEngine on
        #RewriteCond %{SERVER_NAME} =catalogue.dev.cioosatlantic.ca
        ##RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
        #RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE]

	#<Location "/">
        #        Options None
        #        Require all granted
	#
        #        ## Request header rules
        #        ## as per http://httpd.apache.org/docs/2.2/mod/mod_headers.html#requestheader
        #        RequestHeader set X-Forwarded-Proto "https"
        #        ## Proxy Rules
        #        #ProxyRequests Off
        #        ProxyPreserveHost On
        #        ProxyPass http://127.0.0.1:8500/
        #        ProxyPassReverse http://127.0.0.1:8500/
        #</Location>

	# CKAN
        <Location "/">
                ProxyPreserveHost On
                ProxyPass http://127.0.0.1:5000/
                ProxyPassReverse http://127.0.0.1:5000/
                Header always set Access-Control-Allow-Origin "https://assetmap.dev.cioosatlantic.ca"
		#Header always set Access-Control-Allow-Credentials true
		Header always set Access-Control-Allow-Headers "content-type,authorization"
		#Header always set Access-Control-Allow-Headers "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
                Header always set Access-Control-Allow-Method "POST,OPTIONS"
		#Header always set Access-Control-Allow-Method "GET,POST,PATCH,PUT,DELETE,OPTIONS"
                AuthType Basic
                AuthName "Restricted Content"
                AuthUserFile /etc/httpd/.htpasswd
                Require valid-user
        </Location>
        # pycsw
        #<Location "/csw">
        #       ProxyPass http://127.0.0.1:8000/pycsw/csw.js
        #       ProxyPassReverse http://127.0.0.1:8000/pycsw/csw.js
        #</Location>

Include /etc/letsencrypt/options-ssl-apache.conf
SSLCertificateFile /etc/letsencrypt/live/dev.cioosatlantic.ca-0001/cert.pem
SSLCertificateKeyFile /etc/letsencrypt/live/dev.cioosatlantic.ca-0001/privkey.pem
SSLCertificateChainFile /etc/letsencrypt/live/dev.cioosatlantic.ca-0001/chain.pem
</VirtualHost>

<VirtualHost *:443>
        ServerName assetmap.dev.cioosatlantic.ca
        ServerAlias assetmap.dev.cioosatlantic.ca
        DocumentRoot /var/www/html4
        # Assetmap
        <Location "/">
                ProxyPreserveHost On
                ProxyPass http://127.0.0.1:8009/
                ProxyPassReverse http://127.0.0.1:8009/
                #Header set Access-Control-Allow-Origin "*"
		#Header set Access-Control-Allow-Credentials true
                #AuthType Basic
                #AuthName "Restricted Content"
                #AuthUserFile /etc/httpd/.htpasswd
                #Require valid-user
        </Location>
Include /etc/letsencrypt/options-ssl-apache.conf
SSLCertificateFile /etc/letsencrypt/live/dev.cioosatlantic.ca-0001/cert.pem
SSLCertificateKeyFile /etc/letsencrypt/live/dev.cioosatlantic.ca-0001/privkey.pem
SSLCertificateChainFile /etc/letsencrypt/live/dev.cioosatlantic.ca-0001/chain.pem
</VirtualHost>

<VirtualHost *:443>
        ServerName ipt.dev.cioosatlantic.ca
        ServerAlias ipt.dev.cioosatlantic.ca
        DocumentRoot /var/www/html3
        # GBIF
        <Location "/">
                ProxyPreserveHost Off
                ProxyPass http://127.0.0.1:8888/
                ProxyPassReverse http://127.0.0.1:8888/
                Header set Access-Control-Allow-Origin "*"
                #AuthType Basic
                #AuthName "Restricted Content"
                #AuthUserFile /etc/httpd/.htpasswd
                #Require valid-user
        </Location>
Include /etc/letsencrypt/options-ssl-apache.conf
SSLCertificateFile /etc/letsencrypt/live/dev.cioosatlantic.ca-0001/cert.pem
SSLCertificateKeyFile /etc/letsencrypt/live/dev.cioosatlantic.ca-0001/privkey.pem
SSLCertificateChainFile /etc/letsencrypt/live/dev.cioosatlantic.ca-0001/chain.pem
</VirtualHost>

</IfModule>
